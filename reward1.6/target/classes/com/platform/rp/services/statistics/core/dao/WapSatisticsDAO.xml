<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.rp.services.statistics.core.dao.WapSatisticsDAO">

    <sql id="page">
		<if test="start > -1">
			<if test="pageSize > 0">
				limit #{start}, #{pageSize}
			</if>
			<if test="pageSize == 0 or pageSize == '' or pageSize &lt; 0">
				limit #{start}
			</if>
		</if>
	</sql>
    <sql id="orderbyAc">
         <if test="type == 1">ORDER BY amountCount desc,count desc</if>
         <if test="type == 0">ORDER BY count desc,amountCount desc</if>
    </sql>
    
    <sql id="orderbySd">
         <if test="type == 1"> ORDER BY shopownerDivided desc,count desc</if>
         <if test="type == 0">ORDER BY count desc,shopownerDivided desc</if>
    </sql>
    <sql id="orderSc">
         <if test="type == 1">ORDER BY score desc,count desc</if>
         <if test="type == 0">ORDER BY count desc,score desc</if>
    </sql>
    <sql id="groupby">
         <if test="groupType == 1">GROUP BY ir.emp_id</if>
         <if test="groupType == 0">GROUP BY ir.store_id</if>
    </sql>
    <sql id="marking_where">    
	  	<where>  	
	  	 	ir.busdate  &gt;= #{startTime} AND ir.busdate   &lt; #{endTime}
	  	   <if test="storeId != null">AND ir.store_id = #{storeId}</if>
	  	   <if test="empId != null">AND ir.emp_id = #{empId}</if>
	  	   <if test="storeCode != null">  	       
		  	   <if test="storeType==0">AND o.parent_code = #{storeCode}</if>
		  	   <if test="storeType==1">AND o.schema = #{storeCode}</if>
		  	   <if test="storeType==2">AND o.org_code = #{storeCode}</if>
		  	   <if test="storeType==3">AND o.schema = #{storeCode}</if>
	  	   </if>
	  	</where>
    </sql>
    
    <!-- 查询店员排行-->
	<select id="findEmpRawardRanking" resultType="com.platform.rp.services.statistics.core.dao.entity.WapSatisticsEntity">
		SELECT * 
		FROM ( SELECT
				ir.emp_id AS empId,
				nickname AS empName,
				si.store_name AS storeName,
				DATE_FORMAT(
					ir.create_time,
					'%Y-%m-%d %H:%m:%s'
				) AS dateVal,
				ir.store_Id AS storeId,
				ROUND(SUM(ir.receivable), 2) AS amountCount,
				COUNT(ir.receivable) AS count
		FROM
			 it_record_emp_log ir
		LEFT JOIN bs_store_info si ON ir.store_id = si.store_id
		LEFT JOIN bs_merchants_store ms ON ms.store_id = ir.store_id
		LEFT JOIN bs_organize o ON o.org_code = ms.org_code
		
		<include refid="marking_where" />
		AND ir.record_type = 0 	
		<include refid="groupby" />
		)t
		<include refid="orderbyAc" />
		<include refid="page" />
	</select>
    <!-- 查询店员排行-->
	<select id="findEmpRawardRankingCount"  resultType="int" parameterType="map">
		SELECT COUNT(*) FROM (SELECT
			1
		FROM
			 it_record_emp_log ir
		LEFT JOIN bs_store_info si ON ir.store_id = si.store_id
		LEFT JOIN bs_merchants_store ms ON ms.store_id = ir.store_id
		LEFT JOIN bs_organize o ON o.org_code = ms.org_code	
		<include refid="marking_where" />
		AND ir.record_type = 0	
		<include refid="groupby" />
		)t
	</select>

    <!-- 查询店员评分排行-->
	<select id="findEmpScoreRanking" resultType="com.platform.rp.services.statistics.core.dao.entity.WapSatisticsEntity">
		SELECT * ,ROUND((score1/count), 1) AS score
		FROM ( SELECT
				ir.emp_id AS empId,
				nickname AS empName,
				si.store_name AS storeName,
				DATE_FORMAT(
					ir.create_time,
					'%Y-%m-%d %H:%m:%s'
				) AS dateVal,
				ir.store_Id AS storeId,
				ROUND(SUM(ir.receivable), 2) AS score1,
				COUNT(ir.receivable) AS count
		FROM
			 it_record_emp_log ir
		LEFT JOIN bs_store_info si ON ir.store_id = si.store_id
		LEFT JOIN bs_merchants_store ms ON ms.store_id = ir.store_id
		LEFT JOIN bs_organize o ON o.org_code = ms.org_code		
		<include refid="marking_where" />
		AND ir.record_type = 1	
		<include refid="groupby" />
		)t
		<include refid="orderSc" />
		<include refid="page" />
	</select>
    <!-- 查询店员评分排行-->
	<select id="findEmpScoreRankingCount"  resultType="int" parameterType="map">
		SELECT COUNT(*) FROM (SELECT
			1
		FROM
			 it_record_emp_log ir
		LEFT JOIN bs_store_info si ON ir.store_id = si.store_id
		LEFT JOIN bs_merchants_store ms ON ms.store_id = ir.store_id
		LEFT JOIN bs_organize o ON o.org_code = ms.org_code	
		<include refid="marking_where" />
		AND ir.record_type = 1
		<include refid="groupby" />
		)t
	</select>
	
    <!-- 查询店长分成排行-->
	<select id="findStorManagerRanking" resultType="com.platform.rp.services.statistics.core.dao.entity.WapSatisticsEntity">
		SELECT * 
		FROM ( SELECT
				ir.emp_id AS empId,
				nickname AS empName,
				si.store_name AS storeName,
				DATE_FORMAT(
					ir.create_time,
					'%Y-%m-%d %H:%m:%s'
				) AS dateVal,
				ir.store_Id AS storeId,
				ROUND(SUM(ir.paid), 2) AS shopownerDivided,
				COUNT(ir.paid) AS count
		FROM
			 it_record_emp_log ir
		LEFT JOIN bs_store_info si ON ir.store_id = si.store_id
		LEFT JOIN bs_merchants_store ms ON ms.store_id = ir.store_id
		LEFT JOIN bs_organize o ON o.org_code = ms.org_code		
		<include refid="marking_where" />
		AND ir.record_type = 2
		<include refid="groupby" />
		)t
		<include refid="orderbySd" />
		
		<include refid="page" />
	</select>
    <!-- 查询店长分成排行-->
	<select id="findStorManagerRankingCount"  resultType="int" parameterType="map">
		SELECT COUNT(*) FROM (SELECT
			1
		FROM
			 it_record_emp_log ir
		LEFT JOIN bs_store_info si ON ir.store_id = si.store_id
		LEFT JOIN bs_merchants_store ms ON ms.store_id = ir.store_id
		LEFT JOIN bs_organize o ON o.org_code = ms.org_code	
		<include refid="marking_where" />
		AND ir.record_type = 2
		<include refid="groupby" />
		)t
	</select>
	
    <!-- 区域经理（总监）排行 -->
    <sql id="merManageGroupby">
        GROUP BY ir.emp_id
    </sql>
     
    <sql id="mer_marking_where">   
	  	<where>  	
	  	 	ir.busdate  &gt;= #{startTime} AND ir.busdate   &lt; #{endTime}
			AND ir.record_type = 2
	  	 	
	  	 	
         	<if test="storeType == 0">AND  o.parent_code = #{orgCode}</if>
         	<if test="storeType == 1">AND  o.`schema` = #{orgCode}</if>
			AND o.leap = (SELECT leap+1 from bs_organize o2 where o2.org_code = #{orgCode} )
	  	</where>
	 </sql>
	<select id="findMerManagerRanking" resultType="com.platform.rp.services.statistics.core.dao.entity.WapSatisticsEntity">
		SELECT * FROM(
			SELECT
				ir.emp_id AS empId,
				nickname AS empName,
				o.org_code AS orgCode,
				o.`schema`,
				o.org_name AS storeName,
				DATE_FORMAT(
						ir.create_time,
						'%Y-%m-%d %H:%m:%s'
				) AS dateVal,
				ir.store_Id AS storeId,
				ROUND(SUM(ir.paid), 2) AS shopownerDivided,
				COUNT(ir.paid) AS count
			FROM
				it_record_emp_log ir
			INNER JOIN bs_merchants_employee me ON me.emp_id = ir.emp_id
			LEFT JOIN bs_organize o ON o.org_code = me.org_code 
		<include refid="mer_marking_where" />
		<include refid="merManageGroupby" />
		)t
		<include refid="orderbySd" />
		
		<include refid="page" />
	</select>
    <!-- 区域经理（总监）排行数量-->
	<select id="findMerManagerRankingCount"  resultType="int" parameterType="map">
		SELECT COUNT(*) FROM (SELECT
			1
		FROM
				it_record_emp_log ir
			INNER JOIN bs_merchants_employee me ON me.emp_id = ir.emp_id
			LEFT JOIN bs_organize o ON o.org_code = me.org_code 
		<include refid="mer_marking_where" />
		<include refid="merManageGroupby" />
		)t
	</select>
</mapper>