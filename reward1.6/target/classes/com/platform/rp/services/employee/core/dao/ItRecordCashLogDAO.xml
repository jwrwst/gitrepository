<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.rp.services.employee.core.dao.ItRecordCashLogDAO">
    
    <resultMap type="com.platform.rp.services.employee.core.dao.entity.ItRecordCashLogEntity" id="itRecordCashLogEntityMap">
        <id column="id" property="id" />
        <result column="emp_id" property="empId" />
		<result column="cash" property="cash" />
		<result column="status" property="status" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="payment_no" property="paymentNo" />
		<result column="open_id" property="openId" />
	</resultMap>
    
    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.platform.rp.services.employee.core.dao.entity.ItRecordCashLogEntity">
		insert into it_record_cash_log(emp_id,cash,status,payment_no,create_time,update_time)
		values(#{empId},#{cash},#{status},#{paymentNo},now(),#{updateTime})
	</insert>
	
    <update id="update" parameterType="com.platform.rp.services.employee.core.dao.entity.ItRecordCashLogEntity">
		update it_record_cash_log
		<set>
			<if test="cash != null"> cash = #{cash}, </if>
			<if test="createTime != null and createTime != ''"> create_time = #{createTime}, </if>
			<if test="updateTime != null and updateTime != ''"> update_time = #{updateTime}, </if>
			<if test="status != null"> status = #{status}, </if>
			<if test="paymentNo != null and paymentNo != ''"> payment_no = #{paymentNo}, </if>
		</set>
		where id = #{id} 
	</update>
	
    <sql id="page">
		<if test="pageSize > -1">
			<if test="pageSize > 0">
				limit #{start}, #{pageSize}
			</if>
			<if test="pageSize == 0 or pageSize == '' or pageSize &lt; 0">
				limit #{start}
			</if>
		</if>
	</sql>
	
    <select id="count" resultType="int" parameterType="map">
		select count(1) from it_record_cash_log  
		where emp_id=#{empId}
	</select>

	<select id="getPage" resultMap="itRecordCashLogEntityMap" parameterType="map">
		Select * from it_record_cash_log 
		where emp_id = #{empId}
		order by create_time desc
		<include refid="page" />
	</select>
	
	<select id="getList" resultMap="itRecordCashLogEntityMap" parameterType="map">
		Select a.*,b.wx_account open_id from it_record_cash_log  a left join bs_employee_info b on a.emp_id = b.emp_id 
		where status = 1 and DATEDIFF(now(),create_time) >=1 
		order by create_time desc		
	</select>
	
</mapper>