<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.rp.services.sys.core.dao.SysUserInfoDAO">
	
    <resultMap type="com.platform.rp.services.sys.inner.vo.SysUserInfoVo" id="sysUserInfoVoMap">
        <result column="sys_user_id" property="sysUserId" />
		<result column="user_name" property="userName" />
		<result column="real_name" property="realName" />
		<result column="pwd" property="pwd" />
		<result column="status" property="status" />
		<result column="create_time" property="createTime" />
		<result column="upd_time" property="updTime" />
		<result column="create_user_id" property="createUserId" />
		<result column="upd_user_id" property="updUserId" />
    </resultMap>
    
     <resultMap type="com.platform.rp.services.sys.inner.vo.SysUserInfoVo" id="sysloginUserInfoVoMap">
        <result column="sys_user_id" property="sysUserId" />
		<result column="user_name" property="userName" />
		<result column="real_name" property="realName" />
		<result column="pwd" property="pwd" />
		<result column="status" property="status" />
		<result column="empPostion" property="empPostion" />
		<result column="empLevel" property="empLevel" />
		<result column="softaccount" property="softaccount" />
		<result column="softpwd" property="softpwd" />
    </resultMap>
    <resultMap type="com.platform.rp.services.sys.core.dao.entity.SysUserInfoEntity" id="sysUserInfoEntityMap">
        <result column="sys_user_id" property="sysUserId" />
		<result column="user_name" property="userName" />
		<result column="real_name" property="realName" />
		<result column="pwd" property="pwd" />
		<result column="status" property="status" />
		<result column="create_time" property="createTime" />
		<result column="upd_time" property="updTime" />
		<result column="create_user_id" property="createUserId" />
		<result column="upd_user_id" property="updUserId" />
    </resultMap>
	
     <sql id="page">
        <if test="start > -1">
            <if test="end > 0">
                limit #{start}, #{end}
            </if>
        </if>
    </sql>
    
	<select id="getSysUserInfoPage" resultMap="sysUserInfoVoMap" parameterType="com.platform.rp.services.sys.inner.vo.SysUserInfoVo">
		select * from sys_user_info sys
		where 1 = 1 
		<if test="userName != null">
		    and instr(sys.user_name, #{userName}) &gt; 0
		</if>
		<if test="roleName != null">
		    and exists (
				select 1 from sys_user_role_detail urd, sys_role_info role
				where urd.role_id = role.sys_role_id
				and urd.user_id = sys.sys_user_id
				and instr( role.role_name, #{roleName})> 0
			)
		</if>
		order by sys_user_id desc
	</select>


	<select id="getSysUserInfoList" resultType="com.platform.rp.services.sys.inner.vo.SysAuthInfoVo">
		select sys.sysRoleId,
		sys.roleName,sys.createTime,
		sys.updTime, sys.createUserId,
		sys.updUserId
		from SysRoleInfoEntity sys
	</select>

	<select id="getSysUserInfo" resultMap="sysloginUserInfoVoMap" parameterType="string">
		select 
		sys.sys_user_id,
		sys.user_name,
		sys.pwd pwd,
		sys.status
		from sys_user_info sys
		where 
		sys.user_name=#{name} and sys.pwd=#{password}
	</select>

	<select id="get" resultMap="sysUserInfoEntityMap" parameterType="int">
	    select * from sys_user_info where sys_user_id = #{id}
	</select>
	
	<insert id="save" parameterType="com.platform.rp.services.sys.core.dao.entity.SysUserInfoEntity" useGeneratedKeys="true" keyProperty="sysUserId">
	    insert into sys_user_info(user_name,real_name,pwd,status,create_time,upd_time,create_user_id,upd_user_id,empid)
	    values(#{userName},#{realName},#{pwd},#{status},#{createTime},#{updTime},#{createUserId},#{updUserId},#{empid})
	</insert>
	
	<insert id="update" parameterType="com.platform.rp.services.sys.core.dao.entity.SysUserInfoEntity">
	    update sys_user_info
	    <set>
	        <if test="userName != null">
	            user_name = #{userName},
	        </if>
	        <if test="realName != null">
	            real_name = #{realName},
	        </if>
	        <if test="status != null">
	            status = #{status},
	        </if>
	        <if test="updTime != null">
	            upd_time = #{updTime},
	        </if>
	        <if test="createUserId != null">
	            create_user_id = #{createUserId},
	        </if>
	        <if test="updUserId != null">
	            upd_user_id = #{updUserId},
	        </if>
	        <if test="pwd != null">
	            pwd = #{pwd},
	        </if>
	         <if test="empid != 0">
	            empid = #{empid},
	        </if>
	    </set>
	    where sys_user_id = #{sysUserId}
	</insert>
	
	<delete id="delete" parameterType="int">
	    delete from sys_user_info where sys_user_id = #{id}
	</delete>
	
	<select id="authenticationExtrinsicUser" resultMap="sysloginUserInfoVoMap" parameterType="string">
		select 
		sys.sys_user_id,
		sys.user_name,
		sys.pwd pwd,
		sys.status,
		ext.softpwd softpwd
		from sys_user_info user 
		where user.user_name = #{name} and user.pwd = #{password}
	</select>
	
</mapper>