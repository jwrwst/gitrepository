<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.rp.services.store.core.dao.BsStoreInfoDAO">
    
    <resultMap type="com.platform.rp.services.store.core.dao.entity.BsStoreInfoEntity" id="bsStoreInfoEntity">
        <id column="store_id" property="storeId" />
		<result column="address" property="address" />
		<result column="create_mobile" property="createMobile" />
		<result column="create_openId" property="create_openId" />
		<result column="create_time" property="createTime" />
		<result column="create_user" property="createUser" />
		<result column="isUpdate" property="isUpdate" />
		<result column="qrcode" property="qrcode" />
		<result column="reward_money" property="rewardMoney" />
		<result column="signature" property="signature" />
		<result column="sketch" property="sketch" />
		<result column="wish" property="wish" />
		<result column="store_code" property="storeCode" />
		<result column="store_name" property="storeName" />
		<result column="store_type" property="storeType" />
		<result column="code_type" property="codeType" />
		<result column="telphone" property="telphone" />
		<result column="update_time" property="updateTime" />
		<result column="update_user" property="updateUser" />
		
		<result column="area_id" property="areaId" />
		<result column="city_id" property="cityId" />
		<result column="province_id" property="provinceId" />
		<result column="country_id" property="countryId" />
    </resultMap>
    

    <insert id="save" parameterType="com.platform.rp.services.store.core.dao.entity.BsStoreInfoEntity" useGeneratedKeys="true" keyProperty="storeId">
        INSERT INTO bs_store_info (store_code,store_name,store_type,address,telphone,signature,sketch,qrcode,reward_money,isUpdate,create_user,create_mobile,create_openId,create_time,update_user,update_time,wish,
        area_id,city_id,province_id,country_id,code_type)
        VALUES ( #{storeCode}, #{storeName}, #{storeType}, #{address}, #{telphone}, #{signature}, #{sketch}, #{qrcode}, #{rewardMoney}, #{isUpdate}, #{createUser}, #{createMobile}, #{create_openId}, #{createTime}, #{updateUser}, #{updateTime}, #{wish},
         #{areaId}, #{cityId}, #{provinceId}, #{countryId}, #{codeType});

    </insert>
    
    <update id="update" parameterType="com.platform.rp.services.store.core.dao.entity.BsStoreInfoEntity">
        update bs_store_info
        <set>
            <if test="storeName != null and storeName != ''">
                store_name = #{storeName},
            </if>
            <if test="storeCode != null and storeCode != ''">
                store_code = #{storeCode},
            </if>
            <if test="storeType != null and storeType != ''">
                store_type = #{storeType},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="telphone != null and telphone != ''">
                telphone = #{telphone},
            </if>
            <if test="signature != null and signature != ''">
                signature = #{signature},
            </if>
            <if test="sketch != null and sketch != ''">
                sketch = #{sketch},
            </if>
            <if test="wish != null and wish != ''">
                wish = #{wish},
            </if>
            <if test="rewardMoney != 0 and rewardMoney != null">
                reward_money = #{rewardMoney},
            </if>
            <if test="isUpdate != 0">
                isUpdate = #{isUpdate},
            </if>
            <if test="updateUser != null and updateUser != ''">
                update_user = #{updateUser},
            </if>
            <if test="updateTime != null and updateTime != ''">
                update_time = #{updateTime},
            </if>
            			
			<if test="codeType != null and codeType != ''"> code_type = #{codeType}, </if>
			<if test="areaId != null and areaId != ''"> area_id = #{areaId}, </if>
			<if test="areaId == '-1'"> area_id = null, </if>
			<if test="cityId != null and cityId != ''"> city_id = #{cityId}, </if>
			<if test="provinceId != null and provinceId != ''"> province_id = #{provinceId}, </if>
			<if test="countryId != null and countryId != ''"> country_id = #{countryId}, </if>
        </set>
        where store_id = #{storeId}
    </update>
    
    <update id="updateStatus" >
        update bs_store_info
        <set>
			status = #{status},
			update_time = now()	
        </set>
        where store_id = #{storeId}
    </update>
    
    <update id="updateStatuses" >
        update bs_store_info
        <set>
			status = #{status},
			update_time = now()	
        </set>
        where store_id in 
         <foreach collection="storeIds" index="index" item="tag" open="("
			    separator="," close=")">
			   	#{tag}
			</foreach>
    </update>
    
    <update id="updateStatusByStoreCode" >
        update bs_store_info
        <set>
			status = #{status},
			update_time = now()	
        </set>
        where store_code = #{storeCode}
    </update>
    
     <delete id="delete" parameterType="long">
		delete from bs_store_info where store_id = #{storeId}
	</delete>
	
     
    
     
    <select id="get" resultMap="bsStoreInfoEntity" parameterType="long">
         select t.* from bs_store_info t
         where store_id = #{storeId}
    </select>
    
    <select id="getCountByOpenIdAndStoreCode"  resultType="int" parameterType="string">
         select count(1) from bs_store_info t
         where create_openId = #{openId} and store_code = '000'
    </select>
    
    <select id="getListByOpenId" resultMap="bsStoreInfoEntity" parameterType="string">
         select t.* from bs_store_employee s 
         left join bs_employee_info e on s.emp_id = e.emp_id 
         left join bs_store_info t
         where wx_account = #{openId}  and s.status = 1
    </select>
    
    <select id="getCountByOpenId" resultType="int" parameterType="string">
         select count(1) from bs_store_employee s left join bs_employee_info e on s.emp_id = e.emp_id where wx_account = #{openId} and s.status = 1
    </select>
    
    <select id="getCountByOpenIdAndStoreId" resultType="int" parameterType="string">
         select count(1) from bs_store_employee s left join bs_employee_info e on s.emp_id = e.emp_id where wx_account = #{openId}  and s.store_id = #{storeId}  and s.status = 1
    </select>
    
    <select id="getStoreListByEmpId" resultMap="bsStoreInfoEntity" parameterType="long">
		select a.* from bs_store_info a,bs_store_employee se
		where a.store_id = se.store_id and se.emp_id = #{empId} and a.status = 1 and se.status = 1		
	</select>

    
    
</mapper>